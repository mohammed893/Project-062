name: Deploy ya Khaled

on:
  push:
    branches:
@@ -9,41 +10,45 @@ jobs:
    runs-on: ubuntu-latest

    steps:
    - name: Listen to any commit
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Login to AWS ECR
      env:
        AWS_REGION: eu-north-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ACCOUNT_ID: ${{secrets.AWS_MY_ID}}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_MY_ID }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
    - name: Build and push Docker image
      env:
        IMAGE_TAG: latest
        AWS_REGION: eu-north-1
        AWS_ACCOUNT_ID: ${{secrets.AWS_MY_ID}}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_MY_ID }}
      run: |
        docker build -t thedockerizedsystem:$IMAGE_TAG .
        docker tag thedockerizedsystem:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/thedockerizedsystem:$IMAGE_TAG
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ACCOUNT_ID:$IMAGE_TAG
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/thedockerizedsystem:$IMAGE_TAG
    - name: SSH to EC2 and deploy
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        envs: AWS_REGION, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_ACCOUNT_ID
        script: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
          docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/thedockerizedsystem:latest
          docker stop TDS
          docker rm TDS
          docker run -d --name TDS -p 3000:3000 -v employeevol:/var/lib/postgresql/data  $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/thedockerizedsystem:latest
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/thedockerizedsystem:latest
          docker stop TDS || true
          docker rm TDS || true
          docker run -d --name TDS -p 3000:3000 -v employeevol:/var/lib/postgresql/data ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/thedockerizedsystem:latest
