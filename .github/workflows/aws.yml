name: Deploy ya Khaled

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Login to AWS ECR
      env:
        AWS_REGION: eu-north-1
        AWS_ACCOUNT_ID: ${{ secrets.AWS_MY_ID }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build and push Docker image
      env:
        IMAGE_TAG: latest
        AWS_REGION: eu-north-1
        AWS_ACCOUNT_ID: ${{ secrets.AWS_MY_ID }}
      run: |
        docker build -t thedockerizedsystem:$IMAGE_TAG .
        docker tag thedockerizedsystem:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/thedockerizedsystem:$IMAGE_TAG
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/thedockerizedsystem:$IMAGE_TAG

    - name: SSH to EC2 and deploy
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        private-key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Enterting the AWS EC2 Hall....."
          echo $private-key > key && chmod 600 key && $username > EC2_USER && $host > EC2_USER
          ssh -o StrictHostKeyChecking=no -i key EC2_USER@$EC2_HOST

          if [ $? -ne 0 ]; then
           echo "I Lost the path of AWS EC2...."
           exit 1
          fi
          
          echo "Logging into AWS ECR..."
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_MY_ID }}.dkr.ecr.eu-north-1.amazonaws.com
          
          if [ $? -ne 0 ]; then
           echo "AWS ECR login failed"
           exit 1
          fi

          echo "Pulling Docker image..."
          docker pull ${{ secrets.AWS_MY_ID }}.dkr.ecr.eu-north-1.amazonaws.com/thedockerizedsystem:latest
          
          if [ $? -ne 0 ]; then
            echo "Failed to pull Docker image"
            exit 1
          fi

          echo "Stopping and removing existing container if it exists..."
          if [ "$(docker ps -q -f name=TDS)" ]; then
            docker stop TDS
          fi
          if [ "$(docker ps -a -q -f name=TDS)" ]; then
            docker rm TDS
          fi

          echo "Running new Docker container..."
          docker run -d --name TDS -p 3000:3000 -v employeevol:/var/lib/postgresql/data ${{ secrets.AWS_MY_ID }}.dkr.ecr.eu-north-1.amazonaws.com/thedockerizedsystem:latest
          
          if [ $? -ne 0 ]; then
            echo "Failed to run Docker container"
            exit 1
          fi
